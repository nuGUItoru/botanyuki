# アプリ名
日本名 : 一つ、また一つ
英名 : OneByOne

# 概要
要は、複数のカウンターを制御するWebアプリ。

# 経過
Copilotのサンプルを元にした。
最終的にカウント数を8個にし、localStorageによるカウンタ値の保存・復帰を付けた。
あと、細々とデザイン周りは調整した。


# Copilotに作成してもらったサンプル
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>複数カウンターサンプルアプリ</title>
  <style>
    .counter {
      border: 1px solid #ccc;
      padding: 10px;
      margin: 10px;
      display: inline-block;
      text-align: center;
    }
    .counter .value {
      font-size: 2em;
      margin-bottom: 10px;
      display: block;
    }
    button {
      margin: 5px;
      padding: 5px 10px;
    }
  </style>
</head>
<body>
  <h1>複数カウンターのサンプルアプリ</h1>
  <!-- カウンターを格納するコンテナ -->
  <div id="counters"></div>
  
  <script>
    // 複数カウンターの初期値の設定
    const countersData = [
      { id: "counter1", value: 0 },
      { id: "counter2", value: 0 },
      { id: "counter3", value: 0 }
    ];

    // カウンター要素を生成する関数
    function createCounter(counter) {
      // カウンターの親要素
      const container = document.createElement('div');
      container.className = 'counter';
      container.id = counter.id;

      // 現在のカウンターの値を表示する要素
      const display = document.createElement('span');
      display.className = 'value';
      display.textContent = counter.value;

      // 「+」ボタン（加算）
      const addButton = document.createElement('button');
      addButton.textContent = '+';
      addButton.addEventListener('click', function () {
        // 値をインクリメントして表示を更新
        counter.value++;
        display.textContent = counter.value;
      });

      // 「-」ボタン（減算）
      const subtractButton = document.createElement('button');
      subtractButton.textContent = '-';
      subtractButton.addEventListener('click', function () {
        // 値をデクリメントして表示を更新
        counter.value--;
        display.textContent = counter.value;
      });

      // 「クリア」ボタン（値の初期化）
      const clearButton = document.createElement('button');
      clearButton.textContent = 'クリア';
      clearButton.addEventListener('click', function () {
        // 値を 0 にして表示を更新
        counter.value = 0;
        display.textContent = counter.value;
      });

      // 各要素をコンテナに追加
      container.appendChild(display);
      container.appendChild(addButton);
      container.appendChild(subtractButton);
      container.appendChild(clearButton);

      return container;
    }

    // ページ内の counters コンテナに各カウンター要素を追加
    const countersContainer = document.getElementById('counters');
    countersData.forEach(function(counter) {
      countersContainer.appendChild(createCounter(counter));
    });
  </script>
</body>
</html>
